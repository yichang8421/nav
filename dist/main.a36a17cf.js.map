{"version":3,"sources":["main.js"],"names":["$siteList","$","lastLi","find","x","localStorage","getItem","xObject","JSON","parse","hashMap","logo","logoType","url","simplifyUrl","replace","render","remove","forEach","node","index","$li","insertBefore","on","e","window","open","stopPropagation","splice","prompt","console","log","indexOf","push","onbeforeunload","string","stringify","setItem","document","key","i","length","toLowerCase"],"mappings":"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","file":"main.a36a17cf.js","sourceRoot":"..\\src","sourcesContent":["const $siteList = $('.siteList');\r\nconst lastLi = $siteList.find('li.last');\r\n// 读出localStorage中之前存储的x值\r\nconst x = localStorage.getItem('x');\r\n\r\n//将x变成对象\r\nconst xObject = JSON.parse(x);\r\n\r\nconst hashMap = xObject || [\r\n    {logo: 'B', logoType: 'text', url: 'https://bilibili.com'},\r\n    {logo: 'F', logoType: 'image', url: 'https://figma.com/'},\r\n    {logo: 'G', logoType: 'text', url: 'https://github.com/'},\r\n    {logo: 'N', logoType: 'text', url: 'https://nicovideo.jp/'},\r\n];\r\n\r\nconst simplifyUrl = (url) => {\r\n    return url.replace('https://', '')\r\n        .replace('https://', '')\r\n        .replace('www.', '')\r\n        .replace(/\\/.*/, ''); //删除/之后的所有内容\r\n}\r\n\r\nconst render = () => {\r\n    // 重新渲染hashMap之前，将之前渲染过的hashMap全部删除。然后渲染新增加li的hashMap。\r\n    // console.log($siteList.find('li.last')[0].innerText);\r\n    $siteList.find('li:not(.last)').remove();\r\n\r\n    // 优化：可以使用hashMap.slice(2:)从第三个元素开始渲染\r\n    hashMap.forEach((node,index) => {\r\n        // console.log(index);\r\n        const $li = $(`\r\n        <li>\r\n            <div class=\"site\">\r\n                <div class=\"logo\">${node.logo}</div>\r\n                <div class=\"link\">${simplifyUrl(node.url)}</div>\r\n                <div class=\"close\">\r\n                    <svg class=\"icon\">\r\n                        <use xlink:href=\"#icon-baseline-close-px\"></use>\r\n                    </svg>\r\n                </div>\r\n            </div>\r\n        </li> \r\n    `).insertBefore(lastLi);\r\n\r\n        /* 页面跳转功能 */\r\n        $li.on('click', (e) => {\r\n            window.open(node.url);\r\n        });\r\n\r\n        /* 删除功能 */\r\n        $li.on('click', '.close', (e) => {\r\n            e.stopPropagation();\r\n            // console.log(hashMap);\r\n            hashMap.splice(index,1,);\r\n            render();\r\n        });\r\n    });\r\n}\r\n\r\nrender();\r\n/*\r\n*   <li>\r\n        <a href=\"https://www.acfun.cn/\">\r\n            <div class=\"site\">\r\n                <div class=\"logo\">A</div>\r\n                <div class=\"link\">acfun.cn</div>\r\n            </div>\r\n        </a>\r\n    </li>\r\n    <li>\r\n        <a href=\"//bilibili.com\">\r\n            <div class=\"site\">\r\n                <div class=\"logo\">\r\n                    <img src=\"./img/bilibiliLogo.jpeg\" alt=\"\">\r\n                </div>\r\n                <div class=\"link\">bilibili.com</div>\r\n            </div>\r\n        </a>\r\n    </li>\r\n*\r\n*\r\n* */\r\n\r\n$('.addButton')\r\n    .on('click', () => {\r\n        let url = window.prompt('请输入您要添加的网址：');\r\n        console.log(url);\r\n        if (url.indexOf('https') !== 0) {\r\n            url = 'https://' + url;\r\n        }\r\n        console.log(url);\r\n        hashMap.push({\r\n            logo: simplifyUrl(url)[0],\r\n            // 可以使用.toUpperCase()大写，也可以使用css控制logo大写，此处选择后者。\r\n            logoType: 'text',\r\n            url: url,\r\n        });\r\n\r\n        render();\r\n    });\r\n\r\nwindow.onbeforeunload = () => {\r\n    /* 用户关闭页面之前触发。 */\r\n    console.log('页面将关闭');\r\n    // localstorage只能存储字符串\r\n    // jQuery对象变成字符串：\r\n    // const string = hashMap.toString(); 错误\r\n    const string = JSON.stringify(hashMap);\r\n\r\n    // 将string存入localStorage\r\n    localStorage.setItem('x', string);\r\n};\r\n\r\n// 键盘事件\r\n$(document).on('keypress',(e)=>{\r\n    const {key} = e;\r\n    //const key = e.key;\r\n    // console.log(key);\r\n    for(let i =0 ;i<hashMap.length;i++){\r\n        if(hashMap[i].logo.toLowerCase() === key){\r\n            window.open(hashMap[i].url);\r\n        }\r\n    }\r\n})"]}